INSTRUCTIONS FOR SETTING UP THE WINGS NEW LOGIN SERVER


LICENSE NOTICE:
The new login server has been written from scratch, is not based on Topaz,
and does not share any code with Topaz, therefore it is not subject to the
Topaz license or DSP license.
The new login server is entirely (c) 2020-2021 Wings Open Source Project.
The server is licensed under the GNU  Public License (GPLv3) version 3
or any later version of your choice, as long as it contains clause 7 of the
GPLv3 or a compatible clause.
By using this software you agree to comply with the terms of the license.

1. COMPILATION
Generate project files using CMake as usual. The new login server depends
on two popular libraries - zlib and OpenSSL, which are bundled with the
software. When configuring the server using CMake, please note whether the
version being used is the one bundled with the server or another version
installed on your system (This applies only to Windows. No libraries
for other operating systems are bundled, and you will need to install
them yourself).
On Windos - After compilation, copy all DLL files from the bin directory
(if using a 32-bit build) or the bin64 directory (if using a 64-bit build)
into the main project directory.

2. DATABASE
You will need to create at least *TWO* databases, one for the login server
and another for the map server. If multiple worlds are used then each
world requires its own database.
Import all files in the sql-wings directory to the map server database.
Import all files in the sql-login directory to the login server database.

5. MESSAGE QUEUE
You will need to install two pieces of software -
Erlang OTP - Available from https://www.erlang.org/
RabbitMQ - Available from https://www.rabbitmq.com/
Since RabbitMQ depends on Erlang they must be installed in order.
The RabbitMQ server can be configured using scripts in the sbin
directory or via a web interface - see https://www.rabbitmq.com/management.html
The default username is "guest" and the default password is "guest".
It is recommended to change the default password and/or create a different
user for the Wings installation. A vhost must be created for the Wings
installation. On a multiple-world installation, a different vhost must
be created for each world.

6. Configuration -
Copy the conf/default/login.conf file to the conf directory and edit
according to the instructions within the file.
After editing the configuration, launch an SQL client, connect to the
login server database and edit the "worlds" table.
Change the following columns as needed -
name - The name of the server as displayed in the server selection menu
when creating new characters and after login.
db_server_ip - IP address of the DB server of the *map* server
db_server_port - Port number of the database
db_username - DB username
db_password - DB password
db_database - Name of the map server database
db_prefix - Currently not supported and must be left blank
db_use_ssl - Attempt to secure the DB connection using SSL.
This is generally a good idea if the connection between the login server
and the map server goes through the public Internet. If running on the
same machine, keep this disabled for performance reasons.
db_ssl_verify - Only needed if SSL is on. If set to 1, the digital
certificate of the DB server will be validated and the connection will
be rejected if not valid. If the connection between the login server
and the map server goes through the public Internet, this should be
enabled to avoid man-in-the-middle attacks.
db_ssl_ca_certificate - Only needed if SSL verification is enabled.
This needs to point to a file containing a CA certificate. The
certificate presented by the DB server must be signed by this
certificate in order to be considered valid.
db_ssl_client_cert - Only needed if the remote DB requires client
certificate for authentication. This needs to point to the client
certificate file.
db_ssl_client_key - Only needed if db_ssl_client_cert is set. This
needs to point to the corresponding private key. Currently password
protection for private keys is not supported.
mq_server_ip - IP address of the RabbitMQ server
mq_server_port - Port number of the MQ
mq_username - MQ username
mq_password - MQ password
mq_vhost - Name of the vhost used by the map server
mq_ssl_* - These all have the same meaning as their DB counterparts
has_flist - Set to 1 if the map server has a Tonberry-compatible
friend list system, otherwise set to 0.
is_active - Whether this map server is active. If set to 0, this
map server will be completely ignored. At least one map server must
have this column set to 1.
is_test - Marks the server as an Atomos-style test server. If set
to 1, only accounts with special permissions will be allowed to
create characters on this server.
In a multiple world installation, add more rows to the worlds
table as needed.

7. Run and enjoy.


- Twilight
